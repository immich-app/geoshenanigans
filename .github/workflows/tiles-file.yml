name: 'Tiles File'
on:
  workflow_dispatch:
    inputs:
      file_name:
        description: 'The name of the file to deploy, defaults to newest file'
        required: false
  pull_request:
    branches: [ "main" ]
    paths:
      - ".github/workflows/tiles-file.yml"
      - "map-styles/**"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  deploy_tiles:
    name: Deploy Tiles & Styles
    strategy:
      matrix:
        bucket_region: [ "wnam", "enam", "weur", "eeur", "apac", "oc" ]
    defaults:
      run:
        working-directory: 'map-styles'
    runs-on: ubuntu-latest
    outputs:
      KEY: ${{ steps.latest_build.outputs.KEY }}
    steps:
      - name: Tune GitHub-hosted runner network
        uses: smorimoto/tune-github-hosted-runner-network@bb252dcb5c8609a31087e7993daa086f5a1c0069 # v1

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: 'recursive'

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: 'map-styles/.nvmrc'

      - name: Install dependencies
        run: npm ci

      - name: Generate styles
        run: npm run build

      - name: Find latest pmtiles build
        id: latest_build
        env:
          FILE_NAME: ${{ github.event.inputs.file_name }}
        run: |
          if [ -z "$FILE_NAME" ]; then
            build=$(curl -s https://build-metadata.protomaps.dev/builds.json | jq -r 'map(.key) | sort | last')
          else
            build=$FILE_NAME
          fi
          export build=${build%.pmtiles}
          echo "KEY=$build"
          echo "KEY=$build" >> $GITHUB_OUTPUT

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@0d99fa3878a334d3e307c1a8372ad55550fdaea7 # v1
        with:
          disable_base64: true
          rclone_config: |
            [r2]
            type = s3
            provider = Cloudflare
            region = auto
            endpoint = https://601adaaa1eab190cdfe2945f9a6c89d0.r2.cloudflarestorage.com
            access_key_id = ${{ secrets.CLOUDFLARE_TILES_R2_KV_TOKEN_ID }}
            secret_access_key = ${{ secrets.CLOUDFLARE_TILES_R2_KV_TOKEN_HASHED_VALUE }}
            [pmtiles]
            type = http
            url = https://build.protomaps.com/

      - name: Copy latest styles to R2
        run: rclone --progress copy ./dist/ r2:/tiles-${{ matrix.bucket_region }}/${{ steps.latest_build.outputs.KEY }}/styles/ --s3-no-check-bucket --s3-chunk-size=64M --multi-thread-streams=50 --checkers=512

      - name: Copy latest tiles to R2
        run: rclone --progress --http-no-head copyurl "https://build.protomaps.com/${{ steps.latest_build.outputs.KEY }}.pmtiles" r2:/tiles-${{ matrix.bucket_region }}/${{ steps.latest_build.outputs.KEY }}/tiles.pmtiles --s3-no-check-bucket --s3-upload-concurrency 32 --s3-chunk-size=512M --multi-thread-streams=100 --checkers=1024
  update_tile_ref:
    name: Update tile server file reference
    needs: [deploy_tiles]
    runs-on: ubuntu-latest
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@d72941d797fd3113feb6b93fd0dec494b13a2547 # v1
        with:
          app-id: ${{ secrets.PUSH_O_MATIC_APP_ID }}
          private-key: ${{ secrets.PUSH_O_MATIC_APP_KEY }}
      - name: 'Checkout'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ steps.generate-token.outputs.token }}

      - name: Update deployment file name
        run: |
          sed -i -E 's/"pmtiles_deployment_key": "(.*)"/"pmtiles_deployment_key": "${{ needs.deploy_tiles.outputs.KEY }}"/' deployment/modules/cloudflare/tiles-worker/tiles.tfvars.json

      - name: Push updated tiles.tfvars to repo
        uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9
        with:
          add: deployment/modules/cloudflare/tiles-worker/tiles.tfvars.json
          message: Update tile server file to ${{ needs.deploy_tiles.outputs.KEY }}
          push: ${{ github.event_name == 'workflow_dispatch' }}
