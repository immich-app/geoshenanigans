name: Tiles Worker
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  tofu_version: '1.10.2'
  tg_version: '0.83.0'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tiles

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: './tiles/.nvmrc'

      - name: Run npm install
        run: npm ci

      - name: Run linter
        run: npm run lint
        if: ${{ !cancelled() }}

      - name: Run formatter
        run: npm run format
        if: ${{ !cancelled() }}

      - name: Run tsc
        run: npm run check
        if: ${{ !cancelled() }}

      - name: Run unit tests & coverage
        run: npm run test:cov
        if: ${{ !cancelled() }}

  build:
    name: Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tiles

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: './tiles/.nvmrc'

      - name: Run npm install
        run: npm ci

      - name: Run tsc
        run: npm run check
        if: ${{ !cancelled() }}

      - name: Wrangler build
        run: npm run build
        if: ${{ !cancelled() }}

      - name: Upload build output
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: tiles-build-output
          path: tiles/dist
          retention-days: 14
        if: ${{ !cancelled() }}

  check-terragrunt:
    name: Check Terragrunt
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: deployment
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Install 1Password CLI
        uses: 1password/install-cli-action@143a85f84a90555d121cde2ff5872e393a47ab9f # v1

      - name: Install Terragrunt
        uses: eLco/setup-terragrunt@2c5116f8979bb261072ef57c97ac026cd9c27434 # v1
        with:
          terragrunt_version: ${{ env.tg_version }}

      - name: 'Install OpenTofu'
        uses: opentofu/setup-opentofu@592200bd4b9bbf4772ace78f887668b1aee8f716 # v1
        with:
          tofu_version: ${{ env.tofu_version }}
          tofu_wrapper: false

      - name: Check Formatting
        run: terragrunt hclfmt --terragrunt-check --terragrunt-diff

      - name: Check TF fmt
        env:
          ENVIRONMENT: dev
          OP_SERVICE_ACCOUNT_TOKEN: ${{ matrix.environment == 'prod' && secrets.OP_TF_PROD_ENV || secrets.OP_TF_DEV_ENV }}
          TF_VAR_tiles_build_dir: "${{ github.workspace }}/dist"
        run: op run --env-file=".env" -- terragrunt run --all fmt -- -diff -check

  plan-terragrunt:
    needs: build
    name: Plan Terragrunt
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, prod]
    if: github.ref != 'refs/heads/main' && github.event_name != 'workflow_dispatch'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Install Terragrunt
        uses: eLco/setup-terragrunt@2c5116f8979bb261072ef57c97ac026cd9c27434 # v1
        with:
          terragrunt_version: ${{ env.tg_version }}

      - name: Install 1Password CLI
        uses: 1password/install-cli-action@143a85f84a90555d121cde2ff5872e393a47ab9f # v1

      - name: 'Install OpenTofu'
        uses: opentofu/setup-opentofu@592200bd4b9bbf4772ace78f887668b1aee8f716 # v1
        with:
          tofu_version: ${{ env.tofu_version }}
          tofu_wrapper: false

      - name: 'Get build artifact'
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: tiles-build-output
          path: "${{ github.workspace }}/dist"

      - name: Plan All
        working-directory: ${{ github.workspace }}/deployment
        env:
          ENVIRONMENT: ${{ matrix.environment }}
          OP_SERVICE_ACCOUNT_TOKEN: ${{ matrix.environment == 'prod' && secrets.OP_TF_PROD_ENV || secrets.OP_TF_DEV_ENV }}
          TF_VAR_tiles_build_dir: "${{ github.workspace }}/dist"
        run: op run --env-file=".env" -- terragrunt run --all plan

  deploy-terragrunt:
    needs: [build, test]
    name: Deploy Terragrunt
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    env:
      ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@main

      - name: Install 1Password CLI
        uses: 1password/install-cli-action@143a85f84a90555d121cde2ff5872e393a47ab9f # v1

      - name: Install Terragrunt
        uses: eLco/setup-terragrunt@2c5116f8979bb261072ef57c97ac026cd9c27434 # v1
        with:
          terragrunt_version: ${{ env.tg_version }}

      - name: 'Install OpenTofu'
        uses: opentofu/setup-opentofu@592200bd4b9bbf4772ace78f887668b1aee8f716 # v1
        with:
          tofu_version: ${{ env.tofu_version }}
          tofu_wrapper: false

      - name: 'Get build artifact'
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: tiles-build-output
          path: "${{ github.workspace }}/dist"

      - name: Deploy All
        working-directory: ${{ github.workspace }}/deployment
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ github.ref == 'refs/heads/main' && secrets.OP_TF_PROD_ENV || secrets.OP_TF_DEV_ENV }}
          TF_VAR_tiles_build_dir: "${{ github.workspace }}/dist"
        run: op run --env-file=".env" -- terragrunt run --all apply --non-interactive
